@page "/user"
@layout BlogFrontLayout
@inherits BlogFrontComponentBase
@using TinyMCE.Blazor
@using MASA.Framework.Admin.Contracts.Blogs.BlogAdvertisingPictures.Enums

<MRow NoGutters>
    <MCol Cols="2">

    </MCol>
    <MCol Cols="7" Class="ml-6">

        <MCard Class="mx-auto mt-5">
            <MTabsItems>
                <MTabItem>
                    <MCard Flat>
                        <MRow>
                            <MCol Cols="10">
                                <MCardText>
                                    <h5>个人中心</h5>
                                </MCardText>
                            </MCol>
                            <MSpacer></MSpacer>
                        </MRow>
                    </MCard>
                </MTabItem>
            </MTabsItems>

            <MDivider></MDivider>

            @if (Ad.Any())
            {
                <MWindow ShowArrows Class="mx-auto mt-2 mb-2 ml-5 mr-5">
                    <ChildContent>
                        @foreach (var item in Ad.FindAll(ad => ad.Type == BlogAdvertisingPicturesTypes.Home))
                        {
                            <MWindowItem>
                                <MCard Color="grey" Height="100">
                                    <MImage Height="100" Width="@("100%")" Src="@item.Pic"></MImage>
                                </MCard>
                            </MWindowItem>
                        }
                    </ChildContent>
                </MWindow>
            }

            @if (Blogs.Data is not null)
            {
                @foreach (var blog in Blogs.Data)
                {
                    <MCard OnClick="() => HrefDetailPage(blog.id)">
                        <MCardTitle>@blog.title</MCardTitle>
                        <MCardText> @($"{(blog.content.Length > 200 ? blog.content.Substring(0, 200) : blog.content)}") </MCardText>
                        <MCardActions>
                            <p>
                                @* <MAvatar Color="primary" Size="56">
                            <span class="white--text">@blog.typeName</span>
                        </MAvatar>*@
                                <span>@blog.ReleaseTime.ToString("yyyy-MM-dd HH:mm")</span>
                                <span>【@blog.state.GetDescription().Description】</span>
                                @* <span>【@blog.CreatorUserId】</span>*@
                            </p>
                        </MCardActions>
                    </MCard>
                    <MButton OnClick="() => ToWrite(blog.id)" Outlined>编辑</MButton>
                    <MButton OnClick="() => ToDelete(blog)" Outlined>删除</MButton>
                    <MDivider></MDivider>
                }
            }
            <div class="text-center">
                <MContainer>
                    <MRow Justify="JustifyTypes.Center">
                        <MCol Cols="8">
                            <MContainer Class="max-width">
                                <MPagination @bind-Value="@Blogs.Page" Class="my-4" Length=@_pageCount></MPagination>
                            </MContainer>
                        </MCol>
                    </MRow>
                </MContainer>
            </div>
        </MCard>
    </MCol>
    <MCol Cols="2">
        <MCard Class="mx-auto mt-5 ml-10 pb-3">
            <MTabsItems>
                <MTabItem>
                    <MCard Flat>
                        <MRow>
                            <MCol Cols="10">
                                <MCardText>
                                    <h5>推荐广告</h5>
                                </MCardText>
                            </MCol>
                        </MRow>
                    </MCard>
                </MTabItem>
            </MTabsItems>
            @if (Ad.Any())
            {
                <MWindow ShowArrows Class="mx-auto mt-2 mb-2 ml-5 mr-5 mb-5">
                    <ChildContent>
                        @foreach (var item in Ad.FindAll(ad => ad.Type == BlogAdvertisingPicturesTypes.HomeLowerRight))
                        {
                            <MWindowItem>
                                <MCard Color="grey" Height="100">
                                    <MImage Height="100" Width="@("100%")" Src="@item.Pic"></MImage>
                                </MCard>
                            </MWindowItem>
                        }
                    </ChildContent>
                </MWindow>
            }
        </MCard>
    </MCol>
</MRow>


<FormModal Visible="_showWrite"
           Title="文章编辑"
           Width="1000"
           OnCancel="Cancel"
           OnOk="SubmitBlog"
           Model="_options">
    <MRow>
        <MCol Cols="12">
            <MTextField TValue="string" Dense Outlined HideDetails="@("auto")"
                        Label="标题" Clearable
                        @bind-Value="_options.title"/>
        </MCol>
        <MCol Cols="12">
            <MSelect Label="类别"
                     @bind-Value="_options.typeId"
                     Items="_typeList"
                     ItemText="x => x.Item2"
                     ItemValue="x => x.Item1"
                     TItemValue="Guid"
                     TValue="Guid"
                     Dense
                     Outlined
                     HideDetails="true"
                     TItem="(Guid, string)"/>
        </MCol>
        <MCol Cols="12">
            <Editor ApiKey="ci3b169hzg64kvofmshgj2886wybbdxpzsvgrdpto65ke50w"
                    Field="() => _options.content"
                    @bind-Value="_options.content"/>
        </MCol>
        @if (_options.Relations is not null && _options.Relations.Count > 0)
        {
            <MCol Cols="12">
                <MChipGroup ActiveClass="primary--text" Column>
                    @foreach (var relation in _options.Relations)
                    {
                        <MChip Close OnCloseClick="() => OnCloseClick(relation)">@relation.LabelName</MChip>
                    }
                </MChipGroup>
            </MCol>
        }
        <MCol Cols="8">
            <MTextField TValue="string"
                        Dense
                        Outlined
                        Label="标签信息"
                        @bind-Value="_label"
                        HideDetails="true"
                        Clearable/>
        </MCol>
        <MCol Cols="4">
            <MButton Rounded Color="success" OnClick="AddLabel">
                <MIcon Left>mdi-pencil</MIcon>
                添加标签
            </MButton>
        </MCol>
        <MCol Cols="12">
            <MSwitch @bind-Value="_options.isShow"
                     Class="mt-0"
                     Label="@($"{(_options.isShow ? "仅自己可见" : "全部可见")}")">
            </MSwitch>
        </MCol>
    </MRow>
</FormModal>