@page "/app/user/list"
@inject NavigationManager Nav

<div class="text-h2">权限管理</div>
<MAlert Color="light-bluelighten-3" Dark>
    Authing 的权限系统基于 RBAC（Role-based access control，基于角色的访问控制）并可以通过环境属性进行更细粒度的权限控制。既可以管理你的业务系统实体资源，也能管理你的应用中的菜单、按钮等资源权限，具体可以参考文档。
</MAlert>
@*<MCard Class="mt-6">
    <MCardText Class="pa-6">
        <MRow>
            <MCol Md=6 Sm=12 Class="d-flex block-center">
                <span class="text-btn neutral-lighten-1--text">Show:</span>
                <MSelect @bind-Value="_menuPage.PageSize"
                         Color="primary"
                         Style="max-width:120px;"
                         Dense
                         Class="mx-6"
                         HideDetails="@("auto")"
                         Outlined
                         Items="@_menuPage.PageSizes"
                         ItemText="u => u.ToString()"
                         ItemValue="u => u">
                </MSelect>
                <span class="text-btn">entries</span>
            </MCol>
            <MCol Md=6 Sm=12 Class="d-flex block-center">
                <MTextField @bind-Value="_menuPage.Search" Color="primary" Class="rounded-2" HideDetails="@("auto")" Flat Dense Solo BackgroundColor="fill-lighten-1" Placeholder="Search">
                    <PrependInnerContent>
                        <MIcon Size=16 Class="mr-2 neutral-lighten-1--text">mdi-magnify</MIcon>
                    </PrependInnerContent>
                </MTextField>
                <MButton Color="primary" MinWidth=80 Height=32 Class="ml-6 rounded-pill" OnClick="OpenAddMenuPage">
                    Add Menu
                </MButton>
            </MCol>
        </MRow>
    </MCardText>

    <MDataTable Headers="_menuPage.Headers" Items="_menuPage.MenuDatas" TItem="MenuItemResponse" ItemsPerPage="_menuPage.PageSize" HideDefaultFooter Class="user ml-2 table-border-none">
        <HeaderColContent Context="header">
            <span class="text-subtitle">@header.Text</span>
        </HeaderColContent>
        <ItemColContent>
            <div @onclick="()=> _menuPage.CurrentMenuData = context.Item">
                @switch (context.Header.Value)
                {
                    case nameof(MenuItemResponse.Name):
                        <div class="hover-pointer d-flex my-2" @onclick="()=> _visible = true">
                            <span>@context.Item.Name</span>
                        </div>
                        break;
                    case (nameof(MenuItemResponse.Icon)):
                        <MIcon Left Small Color="primary">@context.Item.Icon</MIcon>
                        break;
                    case nameof(MenuItemResponse.Sort):
                        @context.Item.Sort
                        break;
                    case (nameof(MenuItemResponse.Describe)):
                        @context.Item.Describe
                        break;
                    case nameof(MenuItemResponse.Disabled):
                        @(context.Item.Disabled?"Disabled":"Enable")
                        break;
                    case "Action":
                        <MButton @onclick="OpenEditMenuPage">
                            Edit
                        </MButton>
                        <MButton Color="error" OnClick="DeleteMenuAsync">
                            Delete
                        </MButton>
                        break;
                    default:
                        @context.Value
                        break;
                }
            </div>
        </ItemColContent>
    </MDataTable>

    <MCardText>
        <div class="d-flex">
            <div class="mr-auto pt-3 text-btn neutral-lighten-1--text">Showing @((_menuPage.PageIndex-1)*_menuPage.PageSize+1) to @(_menuPage.PageIndex*_menuPage.PageSize) of @_menuPage.CurrentCount entries</div>
            @if (_menuPage.PageCount > 0)
            {
                <MPagination @bind-Value="_menuPage.PageIndex" Color="primary" Circle Length=@_menuPage.PageCount></MPagination>
            }
        </div>
    </MCardText>
</MCard>

<Authorize @bind-Visible=_visible></Authorize>
<Role @bind-Visible=_visible></Role>
<Resource @bind-Visible=_visible></Resource>*@