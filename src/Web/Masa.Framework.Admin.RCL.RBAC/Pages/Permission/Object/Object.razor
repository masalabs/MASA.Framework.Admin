@inherits AdminCompontentBase

<MCard Class="mt-2">
    <MCardText Class="pa-6">
        <MRow>
            <MCol Md=6 Sm=12 Class="d-flex block-center">
                <span class="text-btn neutral-lighten-1--text">@T("Show"):</span>
                <MSelect @bind-Value="ObjectPage.PageSize"
                         Color="primary"
                         Style="max-width:120px;"
                         Dense
                         Class="mx-6"
                         HideDetails="@("auto")"
                         Outlined
                         Items="@ObjectPage.PageSizes"
                         ItemText="u => u.ToString()"
                         ItemValue="u => u">
                </MSelect>
                <span class="text-btn">@T("Entries")</span>
            </MCol>
            <MCol Md=6 Sm=12 Class="d-flex block-center">
                <MTextField @bind-Value="ObjectPage.Search" Color="primary" Class="rounded-2" HideDetails="@("auto")" Flat Dense Solo BackgroundColor="fill-lighten-1" Placeholder="@T("Search")">
                    <PrependInnerContent>
                        <MIcon Size=16 Class="mr-2 neutral-lighten-1--text">mdi-magnify</MIcon>
                    </PrependInnerContent>
                </MTextField>
                <MButton Color="primary" MinWidth=80 Height=32 Class="ml-6 rounded-pill" OnClick="()=>OpenObjectForm()">
                    @T("Add Object")
                </MButton>
                @if(ObjectPage.SelectDatas.Count()>0)
                {
                    <MButton Color="error" MinWidth=80 Height=32 Class="ml-4 rounded-pill" OnClick="()=>OpenBatchDeleteObjectDialog()">
                        @T("Batch Delete")
                    </MButton>
                }
            </MCol>
        </MRow>
    </MCardText>
</MCard>

<MDataTable ShowSelect @bind-Value=ObjectPage.SelectDatas HideDefaultFooter Headers="ObjectPage.Headers" TItem="ObjectItemResponse" Items="ObjectPage.Datas" ItemKey="o => o.Code">
    <HeaderColContent Context="header">
        <span class="text-body neutral-lighten-1--text">@header.Text</span>
    </HeaderColContent>

    <ItemColContent>
        @switch (context.Header.Value)
        {
            case nameof(ObjectItemResponse.Name):
                <div class="hover-pointer d-flex my-2" @onclick="()=> OpenObjectForm(context.Item)">
                    <span>@context.Item.Name</span>
                </div>
                break;
            case nameof(ObjectItemResponse.Code):
                 <span>@context.Item.Code</span>
                break;
            case nameof(ObjectItemResponse.State):
                 <span>@context.Item.State.ToString()</span>
                break;
            case nameof(ObjectItemResponse.ObjectType):
                 <span>@context.Item.ObjectType.ToString()</span>
                break;
            case "Action":
                <MButton Color="primary" OnClick="()=> OpenObjectForm(context.Item)">@T("Edit")</MButton>
                <MButton Color="error" Class="ml-4" OnClick="()=> OpenDeleteObjectDialog(context.Item)">@T("Delete")</MButton>
                break;
            default:
                @context.Value
                break;
        }
    </ItemColContent>
</MDataTable>

<AddOrEdit @bind-Visible=_openObjectForm />
@*<Masa.Framework.Admin.RCL.RBAC.Shared.ConfirmDialog Title="@T("Error")" Message=@ObjectPage.Message @bind-Show="ObjectPage.Error" />
<Masa.Framework.Admin.RCL.RBAC.Shared.ConfirmDialog Title="@T("Information")" ConfirmMode Message=@T("Are you sure you need to delete?") @bind-Show="_confirmDelete" WhenConfirm="DeleteObjectAsync" />
<Masa.Framework.Admin.RCL.RBAC.Shared.ConfirmDialog Title="@T("Information")" ConfirmMode Message=@T("Are you sure you need to delete?") @bind-Show="_confirmBatchDelete" WhenConfirm="BatchDeleteObjectAsync" />
<Masa.Framework.Admin.RCL.RBAC.Shared.MLodding Lodding=ObjectPage.Lodding />*@

@code{
    public bool _openObjectForm;
    public bool _confirmDelete;
    public bool _confirmBatchDelete;

    [Inject]
    public ObjectPage ObjectPage { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        RegisterPage(ObjectPage);
        await ObjectPage.QueryPageDatasAsync();
    }

    public void OpenObjectForm(ObjectItemResponse? objectItem = null)
    {
        _openObjectForm = true;
        ObjectPage.CurrentData = objectItem ?? new();
    }

    void OpenDeleteObjectDialog(ObjectItemResponse item)
    {
        ObjectPage.CurrentData = item;
        _confirmDelete = true;
    }

    async Task DeleteObjectAsync(bool confirm)
    {
        if (confirm) await ObjectPage.DeleteAsync();
    }

    void OpenBatchDeleteObjectDialog()
    {
        _confirmBatchDelete = true;
    }

    async Task BatchDeleteObjectAsync(bool confirm)
    {
        if (confirm) await ObjectPage.DeleteAsync();
    }
}