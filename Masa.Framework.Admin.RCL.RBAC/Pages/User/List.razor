@page "/user/list"
@inherits ComponentBase
@inject NavigationManager Nav

<MCard Class="mt-6">
    <MCardText Class="pa-6">
        <MRow>
            <MCol Md=6 Sm=12 Class="d-flex block-center">
                <span class="text-btn neutral-lighten-1--text">展示:</span>
                <MSelect @bind-Value="_userPage.PageSize"
                         Color="primary"
                         Style="max-width:120px;"
                         Dense
                         Class="mx-6"
                         HideDetails="@("auto")"
                         Outlined
                         Items="@_pageSizes"
                         ItemText="u => u.ToString()"
                         ItemValue="u => u">
                </MSelect>
                <span class="text-btn">条数</span>
            </MCol>
            <MCol Md=6 Sm=12 Class="d-flex block-center">
                <MSelect @bind-Value="_userPage.State"
                         Color="primary"
                         HideDetails="@("auto")"
                         Clearable
                         Dense
                         Outlined
                         Items="@_selectStateList"
                         ItemText="u => u.Text"
                         ItemValue="u => u.Value"
                         Label="状态">
                </MSelect>
                <MTextField @bind-Value="_userPage.Account" Color="primary" Class="rounded-2 ml-6" HideDetails="@("auto")" Flat Dense Solo BackgroundColor="fill-lighten-1" Placeholder="Search">
                    <PrependInnerContent>
                        <MIcon Size=16 Class="mr-2 neutral-lighten-1--text">mdi-magnify</MIcon>
                    </PrependInnerContent>
                </MTextField>
                <MButton Color="primary" MinWidth=80 Height=32 Class="ml-6 rounded-pill" OnClick="()=>_visible=true">
                    Add User
                </MButton>
            </MCol>
        </MRow>
    </MCardText>
    @*Items="_userPage.GetPageDatas()"*@
    <MDataTable Headers="_headers" ShowSelect TItem="UserItemResponse" ItemsPerPage="_userPage.PageSize" HideDefaultFooter Class="user ml-2 table-border-none">
        <HeaderColContent Context="header">
            <span class="text-subtitle">@header.Text</span>
        </HeaderColContent>
        <ItemColContent>
            @switch (context.Header.Value)
            {
                case nameof(UserItemResponse.Name):
                    <div class="hover-pointer d-flex my-2">
                        @if (string.IsNullOrEmpty(context.Item.Cover))
                        {
                            <MAvatar Size=48 Class="mt-1">
                                <span>@GetInitialShow(context.Item.Name)</span>
                            </MAvatar>
                        }
                        else
                        {
                            <MAvatar Size=48 Class="mt-1">
                                <MImage Contain Src="@context.Item.Cover"></MImage>
                            </MAvatar>
                        }
                    </div>
                    break;
                case (nameof(UserItemResponse.Email)):
                    <span>@context.Item.Email</span>
                    break;
                case nameof(UserItemResponse.Gender):
                    @context.Item.Gender
                    break;
                case (nameof(UserItemResponse.LastLoginTime)):
                    @context.Item.LastLoginTime.ToString("yyyy-MM-dd HH:mm:ss")
                    break;
                case nameof(UserItemResponse.State):
                    @if (context.Item.State == (int)State.Enable)
                    {
                        <MChip Color="green" TextColor="white" Ripple="false">
                            <span>@State.Enable.ToString()</span>
                        </MChip>
                    }
                    else
                    {
                        <MChip Color="gray" Ripple="false">
                            <span>@State.Disabled.ToString()</span>
                        </MChip>
                    }
                    break;
                case "Action":
                    <MMenu Right Bottom>
                        <ActivatorContent Context="activatorContext">
                            <MButton Icon @attributes="@activatorContext.Attrs">
                                <MIcon XSmall>fas fa-ellipsis-v</MIcon>
                            </MButton>
                        </ActivatorContent>
                        <ChildContent>
                            <MList>
                                <MListItem OnClick="()=>NavToDetails(context.Item.Id.ToString())">
                                    <MIcon Small>fas fa-user-tie</MIcon>
                                    <MListItemTitle Class="ml-2"> Details </MListItemTitle>
                                </MListItem>
                                <MListItem OnClick="()=>DeleteUser(context.Item.Id.ToString())">
                                    <MIcon Small>far fa-trash-alt</MIcon>
                                    <MListItemTitle Class="ml-2"> Delete </MListItemTitle>
                                </MListItem>
                            </MList>
                        </ChildContent>
                    </MMenu>
                    break;
                default:
                    @context.Value
                    break;
            }
        </ItemColContent>
    </MDataTable>

    <MCardText>
        <div class="d-flex">
            <div class="mr-auto pt-3 text-btn neutral-lighten-1--text">Showing @((_userPage.PageIndex-1)*_userPage.PageSize+1) to @(_userPage.PageIndex*_userPage.PageSize) of @_userPage.CurrentCount entries</div>
            @if (_userPage.PageCount > 0)
            {
                <MPagination @bind-Value="_userPage.PageIndex" Color="primary" Circle Length=@_userPage.PageCount></MPagination>
            }
        </div>
    </MCardText>
</MCard>


<MNavigationDrawer Temporary Fixed Right Value=_visible Width="465" Class="pa-6">
    <div class="block-between mb-12">
        <span class="text-h6">Add New User</span>
        <MIcon Color="neutral-lighten-3" Size=24 OnClick="()=>_visible=false">mdi-close</MIcon>
    </div>
    <MForm Model=_userItem EnableDataAnnotationsValidation>
        <MTextField @bind-Value="_userItem.Account" Class="mb-6" Label="Account" HideDetails="@("auto")" Dense Outlined />
        <MTextField @bind-Value="_userItem.Name" Class="mb-6" Label="Name" HideDetails="@("auto")" Dense Outlined />
        <MTextField @bind-Value="_userItem.Email" Class="mb-6" Label="Email" HideDetails="@("auto")" Dense Outlined />
        <MSelect @bind-Value="_userItem.State"
                 Color="primary" HideDetails="@("auto")"
                 Clearable Dense Outlined
                 Items="@_selectStateList"
                 ItemText="u => u.Text"
                 ItemValue="u => u.Value"
                 Label="State">
        </MSelect>

        <div style="bottom:48px;right:24px;position:absolute">
            <MButton MinWidth=80 Height=40 Outlined Class="text-btn rounded-pill"> Cancel </MButton>
            <MButton MinWidth=80 Height=40 Color="primary" Class="ml-6 rounded-pill"> Add </MButton>
        </div>
    </MForm>
</MNavigationDrawer>