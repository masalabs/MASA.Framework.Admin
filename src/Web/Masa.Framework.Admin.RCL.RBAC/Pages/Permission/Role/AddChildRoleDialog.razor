@inherits AdminCompontentBase

<MRow Justify="@JustifyTypes.Center">
    <MDialog @bind-Value="Visible" Width="800">
        <ChildContent>
            <MCard>
                    <div class="block-between pa-4">
                        <span class="text-h6">@T("Add Role")</span>
                        <MIcon Color="neutral-lighten-3" Size=24 OnClick="()=>UpdateVisible(false)">mdi-close</MIcon>
                    </div>
                <MDivider></MDivider>
                <MCardText Class="pb-3">
                    <MRow Class="mt-0">
                        <MCol Class="pt-0" Style="height:480px;border-right:solid 1px #e9edf7;">@*overflow:scroll;*@
                            <MCheckbox Label="@T("All")" />
                            <MVirtualScroll Height=480 OverscanCount=4 ItemHeight=64 Items="@Page.UserSelect">
                                <ItemContent>
                                    <MCheckbox OnClick="() => context.Select=!context.Select" Label="@context.UserName" />
                                </ItemContent>
                            </MVirtualScroll>
                        </MCol>
                        <MCol Class="pt-0" Style="height:480px;overflow:scroll;">
                            @* <MVirtualScroll Height=300 OverscanCount=@_overscanCount ItemHeight=64 Items="Items">
                                <ItemContent>

                                </ItemContent>
                            </MVirtualScroll>*@
                        </MCol>
                    </MRow>                    
                </MCardText>
                <MDivider></MDivider>
                <MCardActions>
                    <MSpacer></MSpacer>
                    <MButton MinWidth=80 Height=35 Outlined Class="text-btn rounded-pill" OnClick="() =>  UpdateVisible(false)">@T("Cancel")</MButton>
                    <MButton MinWidth=80 Height=35 Color="primary" Class="ml-6 rounded-pill" OnClick=" ()=>  UpdateVisible(false)">@T("Confirm")</MButton>
                </MCardActions>
            </MCard>
        </ChildContent>
    </MDialog>
</MRow>

@code {
    [Inject]
    public RoleDetailsPage Page { get; set; } = default!;

    [Inject]
    public RolePage RolePage { get; set; } = default!;

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }

    private async Task UpdateVisible(bool visible)
    {
        if (VisibleChanged.HasDelegate)
        {
            await VisibleChanged.InvokeAsync(visible);
        }
        else
        {
            Visible = visible;
        }
    }

    public void SelectAll()
    {
        Page.UserSelect.ForEach(u => u.Select = true); 
    }
}