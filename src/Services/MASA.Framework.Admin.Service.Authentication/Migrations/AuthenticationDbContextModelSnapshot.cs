// <auto-generated />
using System;
using MASA.Framework.Admin.Service.Authentication.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MASA.Framework.Admin.Service.Authentication.Migrations
{
    [DbContext(typeof(AuthenticationDbContext))]
    partial class AuthenticationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MASA.BuildingBlocks.Dispatcher.IntegrationEvents.Logs.IntegrationEventLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EventTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("TimesSent")
                        .HasColumnType("int");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("integration_event_log", "authentication");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.ObjectAggregate.Object", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_time");

                    b.Property<Guid>("Creator")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creator");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("modifier_time");

                    b.Property<Guid>("Modifier")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("name");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int")
                        .HasColumnName("object_type");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.ToTable("resources", "authentication");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.ObjectAggregate.ObjectItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("action");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("name");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ObjectIdentifies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state");

                    b.Property<int>("PermissionType")
                        .HasColumnType("int")
                        .HasColumnName("permission_type");

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.ToTable("permissions", "authentication");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.RoleAggregate.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_time");

                    b.Property<Guid>("Creator")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creator");

                    b.Property<string>("Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("describe");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("modifier_time");

                    b.Property<Guid>("Modifier")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.ToTable("roles", "authentication");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.RoleAggregate.RoleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("ChildrenRoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("children_role_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("role_items", "authentication");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.RoleAggregate.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("PermissionEffect")
                        .HasColumnType("int")
                        .HasColumnName("permission_effect");

                    b.Property<int>("PermissionType")
                        .HasColumnType("int")
                        .HasColumnName("permission_type");

                    b.Property<Guid>("PermissionsId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("permissions_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("role_permission", "authentication");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.ObjectAggregate.ObjectItem", b =>
                {
                    b.HasOne("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.ObjectAggregate.Object", "Object")
                        .WithMany("Permissions")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Object");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.RoleAggregate.RoleItem", b =>
                {
                    b.HasOne("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.RoleAggregate.Role", "Role")
                        .WithMany("RoleItems")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.RoleAggregate.RolePermission", b =>
                {
                    b.HasOne("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.RoleAggregate.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.ObjectAggregate.Object", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("MASA.Framework.Admin.Service.Authentication.Domain.Aggregate.RoleAggregate.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("RoleItems");
                });
#pragma warning restore 612, 618
        }
    }
}
